{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/.src/js/admin/formats/glossary-tooltip.js","webpack:///./assets/.src/js/admin/formats/index.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///external [\"wp\",\"richText\"]"],"names":["FORMAT_NAME","order","orderby","per_page","selection","value","verbete","String","options","label","id","__","registerFormatType","title","tagName","className","attributes","verbeteId","edit","isActive","onChange","useState","addingTooltip","setAddingTooltip","currentValue","setValue","glossary","useSelect","findVerbete","toggleFormat","type","getActiveFormat","removeFormat","verbeteOptions"],"mappings":"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","file":"/js/admin/formats.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./assets/build\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import { RichTextToolbarButton } from '@wordpress/block-editor'\nimport { Modal, SelectControl } from '@wordpress/components'\nimport { useSelect } from '@wordpress/data'\nimport { useState } from '@wordpress/element'\nimport { __ } from '@wordpress/i18n'\nimport { getActiveFormat, registerFormatType, removeFormat, toggleFormat } from '@wordpress/rich-text'\n\nconst FORMAT_NAME = 'plenamata/glossary-tooltip'\n\nfunction fetchVerbetes (select) {\n    return select('core').getEntityRecords('postType', 'verbete', {\n        order: 'asc',\n        orderby: 'title',\n        per_page: -1,\n    })\n}\n\nfunction findVerbete (value, glossary) {\n    if (!value || !glossary) {\n        return null\n    }\n    const selection = value.text.slice(value.start, value.end).toLowerCase()\n    for (const verbete of glossary) {\n        if (verbete.title.raw.toLowerCase() === selection) {\n            return String(verbete.id)\n        }\n    }\n    return null\n}\n\nfunction verbeteOptions (glossary) {\n    if (!glossary) {\n        return []\n    }\n    const options = glossary.map((verbete) => {\n        return { label: verbete.title.raw, value: verbete.id }\n    })\n    return [\n        { label: __('Select a verbete', 'plenamata'), value: null },\n        ...options,\n    ]\n}\n\nregisterFormatType(FORMAT_NAME, {\n    title: __('Glossary tooltip', 'plenamata'),\n    tagName: 'span',\n    className: 'glossary-tooltip',\n    attributes: {\n        verbeteId: 'data-verbete-id',\n    },\n\n    edit ({ isActive, onChange, value }) {\n        const [addingTooltip, setAddingTooltip] = useState(false)\n        const [currentValue, setValue] = useState(value)\n\n        const glossary = useSelect(fetchVerbetes, [])\n\n        return <>\n            <RichTextToolbarButton\n                icon=\"testimonial\"\n                isActive={ isActive }\n                title={ __('Glossary tooltip', 'plenamata') }\n                onClick={ () => {\n                    const verbeteId = findVerbete(value, glossary)\n                    if (verbeteId) {\n                        onChange(toggleFormat(value, { type: FORMAT_NAME, attributes: { verbeteId } }))\n                    } else if (getActiveFormat(value, FORMAT_NAME)) {\n                        onChange(removeFormat(value, FORMAT_NAME))\n                    } else {\n                        setAddingTooltip(true)\n                        setValue(value)\n                    }\n                } }\n            />\n            { (addingTooltip) ? (\n                <Modal\n                    title={ __('Glossary tooltip', 'plenamata') }\n                    onRequestClose={ () => {\n                        setAddingTooltip(false)\n                    } }\n                >\n                    <div className=\"select-glossary-tooltip\">\n                        <SelectControl\n                            label={ __('Select verbete:', 'plenamata') }\n                            options={ verbeteOptions(glossary) }\n                            onChange={ (verbeteId) => {\n                                setAddingTooltip(false)\n                                if (verbeteId) {\n                                    onChange(toggleFormat(currentValue, { type: FORMAT_NAME, attributes: { verbeteId } }))\n                                }\n                            } }\n                        />\n                    </div>\n                </Modal>\n            ) : null }\n        </>;\n    },\n})\n","import './glossary-tooltip';","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"data\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","(function() { module.exports = window[\"wp\"][\"richText\"]; }());"],"sourceRoot":""}